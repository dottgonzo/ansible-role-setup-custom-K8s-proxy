---


- name: Install Ingress Nginx
  command: "kubectl apply -f https://raw.githubusercontent.com/dottgonzo/ansible-role-setup-custom-K8s-proxy/master/stacks/nginx-main.yml"
  changed_when: False


- name: Create Ingress-Nginx Service
  k8s:
    state: present
    definition:

      apiVersion: v1
      kind: Service
      metadata:
        annotations:
        labels:
          helm.sh/chart: ingress-nginx-3.19.0
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/instance: ingress-nginx
          app.kubernetes.io/version: 0.43.0
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/component: controller
        name: ingress-nginx-controller
        namespace: ingress-nginx
      spec:
        type: NodePort
        ports:
          - name: http
            port: 80
            nodePort: "{{ nodeHttpPort }}"
            protocol: TCP
            targetPort: http
          - name: https
            port: 443
            nodePort: "{{ nodeHttpsPort }}"
            protocol: TCP
            targetPort: https
        selector:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/instance: ingress-nginx
          app.kubernetes.io/component: controller
  when:
    - nodeHttpPort is defined
    - nodeHttpsPort is defined

- name: Create Ingress-Nginx ConfigMap
  k8s:
    state: "present"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        labels:
          helm.sh/chart: ingress-nginx-3.19.0
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/instance: ingress-nginx
          app.kubernetes.io/version: 0.43.0
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/component: controller
        name: ingress-nginx-controller
        namespace: ingress-nginx
      data:
        use-forwarded-headers: "{{ 'true' if production is defined else 'false' }}"
        compute-full-forwarded-for: "{{ 'true' if production is defined else 'false' }}"
        use-proxy-protocol: "{{ 'true' if production is defined else 'false' }}"

- name: Wait for Nginx boot

  wait_for:
    host: "http://localhost"
    port: "{{ nodeHttpPort }}"
    state: started         # Port should be open
    retries: 120
    delay: 5

  changed_when: False
  when:
    - nodeHttpPort is defined
    - nodeHttpsPort is defined



- name: Add whoami.local test app
  command: "kubectl apply -f https://raw.githubusercontent.com/dottgonzo/ansible-role-setup-custom-K8s-proxy/master/stacks/whoami.yml"
  changed_when: False
  when:
    - nodeHttpPort is defined
    - nodeHttpsPort is defined
  retries: 20
  delay: 10
  register: result
  until: result is not failed


- name: Install Cert Manager
  command: |
    kubectl apply -f  'https://github.com/jetstack/cert-manager/releases/download/v1.1.0/cert-manager.yaml'
  changed_when: False


- name: Wait for Cert Manager Running State
  register: proxyboot

  shell: |
    set -o pipefail
    kubectl get pods -n cert-manager | grep -c Running
  until: proxyboot.stdout|int > 1
  delay: 5
  retries: 100
  changed_when: false

- name: Wait for Cert Manager WebHook Running State
  register: proxyboot

  shell: |
    set -o pipefail
    kubectl get pods -n cert-manager | grep webhook | grep -c Running
  until: proxyboot.stdout|int > 0
  delay: 5
  retries: 100
  changed_when: false

- name: Create Cert Manager SelfSigned ClusterIssuer
  k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1alpha2
      kind: Issuer
      metadata:
        name: selfsigned-issuer
        namespace: cert-manager
      spec:
        selfSigned: {}
  retries: 20
  delay: 10
  register: result
  until: result is not failed
