---
- name: Install Ingress Nginx
  command: "kubectl apply -f https://raw.githubusercontent.com/dottgonzo/ansible-role-setup-custom-K8s-proxy/master/stacks/{{ ingress_nginx_api_filename }}"
  changed_when: False

- name: Install Cert Manager
  command: |
    kubectl apply -f  'https://raw.githubusercontent.com/dottgonzo/ansible-role-setup-custom-K8s-proxy/master/stacks/cert-manager.yml'
  changed_when: False

- name: Wait for Cert Manager Running State
  register: proxyboot

  shell: |
    set -o pipefail
    kubectl get pods -n cert-manager | grep -c Running
  until: proxyboot.stdout|int >= 1
  delay: 5
  retries: 100
  changed_when: false

# - name: Create Cert Manager SelfSigned ClusterIssuer
#   k8s:
#     state: present
#     definition:
#       apiVersion: cert-manager.io/v1alpha2
#       kind: Issuer
#       metadata:
#         name: selfsigned-issuer
#         namespace: sandbox
#       spec:
#         selfSigned: {}


- name: Create Cert Manager Staging ClusterIssuer
  k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1alpha2
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-prod
      spec:
        acme:
          # The ACME server URL
          server: https://acme-v02.api.letsencrypt.org/directory
          # Email address used for ACME registration
          email: "{{ acme_email }}"
          # Name of a secret used to store the ACME account private key
          privateKeySecretRef:
            name: letsencrypt-prod
          # Enable the HTTP-01 challenge provider
          solvers: "{{ cert_manager_staging_cluster_solvers }}"
  when:
    - cert_manager_staging_cluster_solvers is defined


- name: Create Cert Manager Production ClusterIssuer
  k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1alpha2
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-prod
      spec:
        acme:
          # The ACME server URL
          server: https://acme-v02.api.letsencrypt.org/directory
          # Email address used for ACME registration
          email: "{{ acme_email }}"
          # Name of a secret used to store the ACME account private key
          privateKeySecretRef:
            name: letsencrypt-prod
          # Enable the HTTP-01 challenge provider
          solvers: "{{ cert_manager_production_cluster_solvers }}"
  when:
    - cert_manager_production_cluster_solvers is defined